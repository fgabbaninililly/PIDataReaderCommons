<?xml version="1.0" encoding="utf-8" ?>
<config test="false"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				xmlns="http://www.lilly.com/PIDR"
				xsi:schemaLocation="http://www.lilly.com/PIDR file:///C:\Program%20Files\Eli%20Lilly\PIDataReaderApps\config.xsd">
	<dateformats pi="dd/MM/yyyy HH:mm:ss" reference="yyyy-MM-ddTHH-mm-ss" hadoop="yyyy-MM-dd HH:mm:ss"/>
	<!-- DO NOT USE XML SPECIAL CHARACTERS AS SEPARATORS: &lt; (<), &amp; (&), &gt; (>), &quot; ("), and &apos; (') -->
  <!-- 
		Tag values are serialized as strings using the pattern: timestamp<timestamp separator>value<value separator>timestamp<timestamp separator>value<value separator>[...]
		Each value can consist in a set of fields (value, svalue, status) separated by <field separator>
		As a result the pattern is as follows:
		timestamp<timestamp separator>field<field separator>field<field separator>field<value separator>timestamp<timestamp separator>field<field separator>field<field separator>field<value separator>[...]
		Example: 2018-10-16T01-30-22.000:85.46826172-:-2018-10-16T02-39-22.000:99.19163513-:-2018-10-16T03-44-22.000:96.29905701-:-2018-10-16T04-57-22.000:75.98847961-:-2018-10-16T07-30-52.000:14.37839985-:-2018-10-16T08-39-52.000:0.76978278-:-2018-10-16T09-44-52.000:3.78370595-:-2018-10-16T10-57-52.000:24.19803047-:-2018-10-16T13-31-22.000:85.77426147-:-2018-10-16T14-31-22.000:98.44711304-:-2018-10-16T15-31-22.000:98.13861847-:-2018-10-16T16-40-52.000:81.84907532-:-2018-10-16T19-33-22.000:13.62164593-:-2018-10-16T20-37-22.000:0.97221178-:-2018-10-16T21-42-22.000:3.37837267-:-2018-10-16T22-56-22.000:23.63940430-:-
		<timestamp separator> = :
		<value separator> = -:-
		<field separator> = NA (not needed as we have to serialize only 1 value
		timestamp: separates timestamp from value measurements related to the timestamp itself; CAN BE A STRING.
		value: separates values related to different timestamps; CAN BE A STRING.
		field: separates different components of a value related to a certain timestamp; CAN BE A STRING.
	-->
  <separators timestamp=":" field="|" value=","/>
	<maildata enabled="true">
		<smtphost></smtphost>
		<from></from>
		<to></to> <!--Multiple addresses allowed here, separated by ;-->
		<subject></subject>
		<body>PI DataReader was stopped. Details:
- Running on: [[machinename]]
- Instance: [[mqttclientname]]
- Time: [[time]]
		</body>
	</maildata>
	<connections>
		<connection name="mqtt">
			<parameters>
				<parameter name="mqttenabled">true</parameter><!-- can be true or false; if parameter is not specified, MQTT is ENABLED by default -->
				<parameter name="mqttclienttype">[client type]</parameter><!-- can be MQTTnet or M2Mqtt -->
				<parameter name="mqttbrokeraddress">[address to MQTT broker]</parameter>
				<parameter name="mqttbrokerport">1883</parameter>
				<parameter name="mqttclientname">Sample reader 01</parameter>
				<parameter name="mqttkeepalivesec">240</parameter> <!-- keep connection to broker alive by sending PINGREQ messages every x seconds -->
			</parameters>
		</connection>
		<connection name="pi">
			<parameters>
				<parameter name="piservername">[pi server name]</parameter> <!-- server name should be mapped as an entry in PISDK Utility -->
				<parameter name="pisdktype">[sdk type]</parameter> <!-- sdktype can be afsdk or pisdk or oledb; afsdk is default, HOWEVER, batches can only be read using pisdk or oledb -->
				<parameter name="piboundarytype">inside</parameter> <!-- boundary can be inside, outside, interpolated; inside is default -->
			</parameters>
		</connection>
	</connections>
	<read mode="tag"> <!-- mode="tag|batch" -->
		<readextent type="frequency" slice="1" unit="h"> <!-- readextent type can be frequency, fixed, relative; slice can be any integer number; unit can be s(econds), h(ours), d(ays) -->
			<frequency value="100" unit="s" buffer="0" limit="100"/> <!-- reads 100 time units back from now, repeat every 100 time units; unit can be s(econds), h(ours), d(ays); buffer is used to enlarge the read window by a percentage (by shifting the starting time); limit limits the amount of time that data can be read back when the software restarts after a period of stop.-->
			<!--fixed startdate="2017-02-01T12-00-00" enddate="2017-02-01T14-00-00"/--> <!-- read a fixed date range -->
			<!--relative readpast="12" unit="h"/--> <!-- read the past 12 time units from now, unit is set to h(ours) -->
		</readextent>
		<equipments>
      <equipment name="Sample equipment" mqtttopic = "sample/topic">
				<taglist>[insert your tag list here]</taglist>
				<phaselist>[if there are phases represented as tags, insert them here]</phaselist>
      </equipment>
    </equipments>
		<!--
		<batches>
			<batch modulename="T_ITP_P31" modulepath="Sesto\P31\Filling Line\T_ITP_P31" mqtttopic = "lilly/sesto/line1/T_ITP_P31/batchesFix"/>
			<batch modulename="T_ITP_P10" modulepath="Sesto\P10\Filling Line\T_ITP_P10" mqtttopic = "lilly/sesto/line1/T_ITP_P10/batchesFix"/>
		</batches>
		-->
  </read>
</config>